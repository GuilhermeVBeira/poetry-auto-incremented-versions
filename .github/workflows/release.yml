# from https://zenn.dev/u_not/articles/abcc0ebd71655b
name: Upload Python Package
on:
  push:
    branches: main 

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py -O
        python install-poetry.py --preview --version 1.2.0a1
    - name: Add path for Poetry
      run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Add Poetry Plugin
      # poetry plugin add poetry-version-plugin
      run: |
        python -m pip install --upgrade pip
        pip install poetry-version-plugin
    - name: Getting video id
      run: echo "VIDEO_ID=$(python scripts/youtube_video_id.py)" >> $GITHUB_ENV
    - name: Getting version
      run: echo "NEW_VERSION=$(cat CHANGES.rst | awk '/^[0-9]+\.[0-9]+(\.[0-9]+)?/' | head -n1)" >> $GITHUB_ENV
    - name: Getting description
      run: echo "DESCRIPTION_VERSION=$(cat CHANGES.rst | awk '/* \w+/' | head -n1)" >> $GITHUB_ENV
    - name: Build Poetry
      run: |
        git tag v${{ env.NEW_VERSION }}
        poetry build
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION}} 
        release_name: Release v${{ env.NEW_VERSION}}
        body: |
          ${{ env.DESCRIPTION_VERSION }} [![Release Music](https://img.youtube.com/vi/${{ env.VIDEO_ID }}/maxresdefault.jpg)](https://youtu.be/${{ env.VIDEO_ID}})
        draft: false
        prerelease: false
    - name: Get Name of Artifact
      run: |
        ARTIFACT_PATHNAME=$(ls dist/*.whl | head -n 1)
        ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
        echo "ARTIFACT_PATHNAME=${ARTIFACT_PATHNAME}" >> $GITHUB_ENV
        echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
    - name: Upload Whl to Release Assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ARTIFACT_PATHNAME }}
        asset_name: ${{ env.ARTIFACT_NAME }}
        asset_content_type: application/x-wheel+zip
